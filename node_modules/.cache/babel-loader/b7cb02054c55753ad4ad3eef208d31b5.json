{"ast":null,"code":"var _jsxFileName = \"/home/aruzhan/Desktop/project/src/components/sidebar/MenuItemComponent.js\";\nimport React from 'react';\nimport { any, arrayOf, func, string } from 'prop-types';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CollapsibleContent from 'components/collapsible/CollapsibleContent';\nimport { useSidebar } from 'hooks/useSidebar';\nconst useStyles = createUseStyles({\n  activeContainer: {\n    backgroundColor: ({\n      theme\n    }) => theme.color.paleBlueTransparent\n  },\n  container: {\n    display: 'flex',\n    height: 56,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: ({\n        theme\n      }) => theme.color.paleBlueTransparent\n    },\n    paddingLeft: ({\n      level\n    }) => 32 * level,\n    transition: 'all 0.2s ease-in-out'\n  },\n  leftBar: {\n    borderLeft: ({\n      theme,\n      level\n    }) => level > 1 ? 'none' : `3px solid ${theme.color.darkGrayishBlue}`\n  },\n  title: {\n    fontSize: 16,\n    lineHeight: '20px',\n    letterSpacing: '0.2px',\n    color: ({\n      theme,\n      isActive\n    }) => isActive ? theme.color.paleBlue : theme.color.grayishBlue,\n    marginLeft: 24\n  }\n});\n\nfunction MenuItemComponent({\n  children,\n  icon: Icon,\n  id,\n  items = [],\n  level = 1,\n  onClick,\n  title\n}) {\n  const theme = useTheme();\n  const isCollapsible = children && children.length > 0;\n  const {\n    isExpanded,\n    isActive,\n    onItemClick\n  } = useSidebar({\n    isCollapsible,\n    item: id,\n    items\n  });\n  const classes = useStyles({\n    theme,\n    level,\n    isActive\n  });\n  const classNameColumn = isActive ? classes.leftBar : '';\n  const classNameContainer = [classes.container, isActive && classes.activeContainer].join(' ');\n  const iconColor = isActive ? theme.color.paleBlue : theme.color.grayishBlue2;\n\n  function onItemClicked(e) {\n    if (onClick) {\n      onClick(e);\n    }\n\n    onItemClick();\n  }\n\n  return /*#__PURE__*/React.createElement(Column, {\n    key: id,\n    className: classNameColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    vertical: \"center\",\n    onClick: onItemClicked,\n    className: classNameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fill: iconColor,\n    opacity: !isActive && '0.4',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, title)), isCollapsible && /*#__PURE__*/React.createElement(CollapsibleContent, {\n    expanded: isExpanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, children.map(child => child.type({ ...child.props\n  }))));\n}\n\nMenuItemComponent.defaultProps = {};\nMenuItemComponent.propTypes = {\n  children: any,\n  icon: func,\n  id: string,\n  onClick: func,\n  items: arrayOf(string),\n  title: string\n};\nexport default MenuItemComponent;","map":{"version":3,"sources":["/home/aruzhan/Desktop/project/src/components/sidebar/MenuItemComponent.js"],"names":["React","any","arrayOf","func","string","Column","Row","createUseStyles","useTheme","CollapsibleContent","useSidebar","useStyles","activeContainer","backgroundColor","theme","color","paleBlueTransparent","container","display","height","cursor","paddingLeft","level","transition","leftBar","borderLeft","darkGrayishBlue","title","fontSize","lineHeight","letterSpacing","isActive","paleBlue","grayishBlue","marginLeft","MenuItemComponent","children","icon","Icon","id","items","onClick","isCollapsible","length","isExpanded","onItemClick","item","classes","classNameColumn","classNameContainer","join","iconColor","grayishBlue2","onItemClicked","e","map","child","type","props","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { any, arrayOf, func, string } from 'prop-types';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CollapsibleContent from 'components/collapsible/CollapsibleContent';\nimport { useSidebar } from 'hooks/useSidebar';\n\nconst useStyles = createUseStyles({\n    activeContainer: {\n        backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\n    },\n    container: {\n        display: 'flex',\n        height: 56,\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\n        },\n        paddingLeft: ({ level }) => 32 * level,\n        transition: 'all 0.2s ease-in-out'\n    },\n    leftBar: {\n        borderLeft: ({ theme, level }) =>\n            level > 1 ? 'none' : `3px solid ${theme.color.darkGrayishBlue}`\n    },\n    title: {\n        fontSize: 16,\n        lineHeight: '20px',\n        letterSpacing: '0.2px',\n        color: ({ theme, isActive }) => (isActive ? theme.color.paleBlue : theme.color.grayishBlue),\n        marginLeft: 24\n    }\n});\n\nfunction MenuItemComponent({ children, icon: Icon, id, items = [], level = 1, onClick, title }) {\n    const theme = useTheme();\n    const isCollapsible = children && children.length > 0;\n    const { isExpanded, isActive, onItemClick } = useSidebar({\n        isCollapsible,\n        item: id,\n        items\n    });\n    const classes = useStyles({ theme, level, isActive });\n    const classNameColumn = isActive ? classes.leftBar : '';\n    const classNameContainer = [classes.container, isActive && classes.activeContainer].join(' ');\n    const iconColor = isActive ? theme.color.paleBlue : theme.color.grayishBlue2;\n\n    function onItemClicked(e) {\n        if (onClick) {\n            onClick(e);\n        }\n        onItemClick();\n    }\n\n    return (\n        <Column key={id} className={classNameColumn}>\n            <Row vertical='center' onClick={onItemClicked} className={classNameContainer}>\n                <Icon fill={iconColor} opacity={!isActive && '0.4'} />\n                <span className={classes.title}>{title}</span>\n            </Row>\n            {isCollapsible && (\n                <CollapsibleContent expanded={isExpanded}>\n                    {children.map((child) => child.type({ ...child.props }))}\n                </CollapsibleContent>\n            )}\n        </Column>\n    );\n}\n\nMenuItemComponent.defaultProps = {};\n\nMenuItemComponent.propTypes = {\n    children: any,\n    icon: func,\n    id: string,\n    onClick: func,\n    items: arrayOf(string),\n    title: string\n};\n\nexport default MenuItemComponent;\n"]},"metadata":{},"sourceType":"module"}